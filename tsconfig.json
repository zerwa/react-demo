{
    "compilerOptions": {
      //Use strict type checking
      //This makes it so 'null' and 'undefined' are considered explicit values
      //It shows type errors where types could not be inferred, among other things
      "strict": true,
  
      //Transforms react JSX syntax into React.createElement() calls
      "jsx": "react",
  
      //Tell the TypeScript compiler what libraries we expect to exist
      //In this case, we expect the user's browser to have ES5 support and a dom
      "lib": ["es5", "dom", "es2015.promise"],
  
      //This causes ES6 modules to be used instead of CommonJS
      //This is important since it enables webpack to do tree shaking optimizations (dead code removal)
      //This is different from the compilation target, which is still ES3 by default
      "module": "es6",
  
      //When setting "module": "es6" or "target": "es6", the typescript compiler defaults to the "classic" module resolution strategy
      //It is important that we use the "node" module resolution strategy instead to properly resolve our imports
      "moduleResolution": "node"
    },
    "exclude": [
      "node_modules"
    ]
  }